continue
@photo_session
exit
@photo_session
continue
params
photo_session_params[:address]
photo_session_params[:end_date]
photo_session_params[:start_date]
photo_session_params
continue
date.strftime("%F")
date = DateTime.parse(photo_session_params[:start_date])
photo_session_params[:start_date]
photo_session_params.start_date
photo_session_params
exit
PhotoSession.find(params[:id])
params[:id]
params
continue
PhotoSession.all.select { |ps| ps.user_id === current_user.id }
current_user.id
current_user
continue
@photo_session
continue
PhotoSession.create(photo_session_params)
photo_session_params
continue
photo_session_params
continue
photo_sessions_params
photo_session_params
params
continue
photographer_params
params
@photographer
continue
params
user_params
continue
user_params
params
user_params
continue
photographer_login_params
user_login_params
exit
User.new(user_params)
exit
user_params
params
user_params
User.new(user_params)
exit
User.new(user_params)
continue
User.new(user_params)
user_params
continue
current_photographer
current_user
exit
@user
user
current_user_or_photographer
logged_in?
continue
logged_in? && current_user
continue
decoded_token[0]["user_id"]
decoded_token[0]
decoded_token
exit
request.headers["Authorization"]
exit
